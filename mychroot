#!/bin/bash
# Name        : KreyMyChroot (KMS)
# Description : KreyMyChroot uses environment variables to chroot into available filesystems on multiboot systems
# Author      : github.com/kreyren
# Licence     : GPLv2

CALLME=KMC

dependency () {
	if [[ ! -x $(command -v chroot) ]]; then
		echo "FATAL: Command 'chroot' is not executable!"
		exit 0
	fi

	if [[ ! -x $(command -v mkdir) ]]; then
		echo "FATAL: Command 'mkdir' is not executable!"
		exit 0
	fi

	if [[ ! -x $(command -v mount) ]]; then
		echo "FATAL: Command 'mount' is not executable!"
		exit 0
	fi
}

# CHECK ROOT
checkroot () {
	if [[ $UID == 0 ]]; then
		echo "something" 2&> /dev/null
		#No need to bother with "wow you are roooot!!"

		elif [[ -x "$(command -v sudo)" ]]; then
			echo -e "\e[1;32m$CALLME:\e[0m Failed to aquire root permission, trying using sudo."
			sudo $0 "$@"
			exit 1

		#TODO: Add sudo alternatives

		elif [[ ! -x "$(command -v sudo)" ]]; then
			echo -e "\e[1;32m$CALLME:\e[0m Failed to aquire root permission, trying using su."
			su -c "$0 $@"
			exit 1

	fi
}

chroot-me-senpaii () {

	# Sanity check for $1_CHROOT
	while [[ $1_CHROOT =! "/dev/sd[abcdefghijklmnopqrstuvwxyz][1-9]" ]]; do
		echo "ERROR: $1_CHROOT is not /dev/sd[abcdefghijklmnopqrstuvwxyz][1-9]"

		echo "(R)etry, (M)anuall"
		read CHOICE
		if [[ CHOICE == @(M|m) ]]; then
			# Expected /dev/{USER_INPUT}
		fi
	done

	# Create a directory for chroot
	if [[ ! -e $DIR ]]; then
		mkdir -p $DIR || echo "FATAL: Unable to make new directory $DIR." && exit 0
	fi

	mount $1_CHROOT $DIR || echo "FATAL: Mounting $GENTOO_CHROOT to $DIR failed!" && exit 0
	mount --rbind /dev $DIR/dev || echo "ERROR: Unable to rbind /dev to $DIR/dev." 
	mount --make-rslave $DIR/dev || echo "ERROR: Unable to make-rslave of $DIR/dev."
	mount -t proc /proc $DIR/proc || echo "ERROR: Unable to mount proc."
	mount --rbind /sys $DIR/sys || echo "ERROR: Unable to rbind /sys to $DIR/sys"
	mount --make-rslave $DIR/sys || echo "ERROR: Unable to make-rslave of $DIR/tmp"
	mount --rbind /tmp $DIR/tmp || echo "ERROR: Unable to rbind /tmp to $DIR/tmp"
}

case $1 in
	--gentoo)
		checkroot $@
		1=GENTOO
		dependency
		DIR=/mnt/gentoo
		chroot-me-senpaii
	;;
	--ubuntu)
		checkroot $@
		1=UBUNTU
		dependency
		DIR=/mnt/ubuntu
		chroot-me-senpaii
	;;
	--LFS)
		checkroot $@
		1=LFS
		dependency
		DIR=/mnt/LFS
		chroot-me-senpaii
	;;
	--OpenSUSE)
		checkroot $@
		1=OPENSUSE
		dependency
		DIR=/mnt/OpenSUSE
		chroot-me-senpaii
	;;
	*)
		showhelp
esac