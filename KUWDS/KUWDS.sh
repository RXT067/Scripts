# Krey's Universal Wine Game Debugging Script (KUWDS)
# Licence: GNUv2
# Author: kreyren @ github.com/kreyren
# Abstract: Enhancement of "wine" command used for debugging + Generates a markdown document with all **usefull** informations used for debugging.

#TODO: Make it sudo independant

# DEPENDANCIES
## SUDO (TEMP)
if [[ ! -x $(command -v sudo) ]]; then
	echo "FATAL: This script is currently dependant on sudo, which wasn't detected on your system."
	exit 1
fi

## WINE
if [[ ! -x $(command -v wine) ]]; then
	echo "FATAL: This script is dependant of wine, which is not present on your system."
	echo "DEBUG: This is output of 'command -v wine': $(command -v wine)"
fi

# TODO: mkdir,cp,mv,date,chmod, lshw, screenfetch

# VARs
DATE="$(date '+%d%m%y-%H%M%S' )"




# GAMEDIR
gamedir () {
echo "Speficy game directory:"
read $GAMEDIR

if [[ GAMEDIR != */.wine*/* ]]; then
	echo "WARN: This does NOT look like wine prefix."
fi

}




# Make a new entry in debug dir
debugdir () {
DEBUGDIR="/tmp/$GAME-$DATE" # TODO: Set as system VAR

sudo mkdir -p $DEBGUDIR

if [[ ! -w $DEBUGDIR ]]; then
	sudo chmod +w $DEBUGDIR

	else
		echo "FATAL: Unable to write to $DEBUGDIR."
		exit 1
fi
}




dxvk_config () {
# cat DXVK_CONFIG to markdown document
if [[ -e $GAMEDIR/DXVK.conf ]]; then
	DXVK_CONFIG=$GAMEDIR/DXVK.conf

	else 
		echo "DXVK.conf wasn't detected."
		echo "Do you want to speficy path for it? (y/n)"
		read $DXVK_CHOICE

		if [[ DXVK_CHOICE == N ]] || [[ DXVK_CHOICE == n ]]; then
			DXVK_CONF_PATH_VALID=true # To skip following loop
		fi

		while [[ DXVK_CONF_PATH_VALID != true ]]; do

			if [[ DXVK_CHOICE == Y ]] || [[ DXVK_CHOICE == y ]]; then
				echo "Speficy path for DXVK.conf"
				read $DXVK_CONF_PATH
				echo "INFO: DXVK_CONFIG_FILE is set on $DXVK_CONFIG."
				DXVK_CONF_PATH_VALID=true
			fi
		done
fi

# Document creation
#TODO: Grep only 3rd row in RAM
#TODO: Outputs nothing if glxinfo not present.
echo "

# HARDWARE INFORMATIONS 

CPU: $(uname -p)

MOBO: fixme

GPU: $(sudo lshw -C display | grep product)

RAM: $(sudo lshw -short -C memory | grep "0/19/*") 

Storage: $(sudo lshw --class disk) | grep "product")


# SOFTWARE INFORMATIONS

OS: $(uname -o)

Kernel: $(uname -r) $(uname -v)

WINE: $(wine --version)

Drivers: $(screenfetch -n | grep "GPU")

DXVK: fixme

Xorg: $(Xorg -v | grep )

Wayland: fixme

$(glxinfo | grep "OpenGL version")


## Present libraries

```
$(ldconfig -p)
```

## Loaded libraries by wine

WINEDEBUG='loaddll' wine 

theory: Invoke wike app, kill it, reinvoke?

## Wine errors

Concept: WINEDEBUG='err+all' wine

## Wine Warnings

WINEDEBUG='warn+all'

## Wine fixme

WINEDEBGU='fixme+all'




##### Credits

Generated by Krey's Universal Wine Debugging Script (KUWDS) from https://github.com/RXT067/Scripts/KUWDS in $( date +%d.%m$.%y-%H:%M:%S ).

Contributors
- Kreyren @ github.com/kreyren


" >> $DEBUGDIR/wine-report.md

# Start a game + submit output
WINEDEBUG='warn+all,err+dll,err+seh,err+heap' WINEPREFIX='/home/kreyren/.wine' DXVK_HUD='devinfo,fps,frametimes,drawcalls,pipelines,memory,version' DXVK_CONFIG_FILE='$DXVK_CONFIG' DXVK_LOG_PATH='$DEBUGDIR/DXVK_DISHONORED.log' DXVK_LOG_LEVEL='debug' DXVK_STATE_CACHE='/tmp/dishonored' wine start /unix "/home/kreyren/.wine/drive_c/Program Files (x86)/Steam/steamapps/common/$GAME/$GAME.exe" 2>&1 | tee -a "$DEBUGDIR/dishonored2_runtime.log"
echo wine!

case $1 in 
	--custom)
	gamedir
	;;

	--help)
	echo "can't help you.."
	;;

	*)
	

esac